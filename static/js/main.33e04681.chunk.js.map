{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","components/Footer.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","handleToggle","deleteTodo","react_default","a","createElement","key","id","className","type","onChange","checked","completed","htmlFor","title","onClick","TodoList","todos","map","components_TodoItem","Header","addTodo","getTodo","onSubmit","placeholder","value","filtersList","filterName","filterText","Footer","handleFilter","clearCompletedTodos","style","display","filter","length","filterItem","href","some","TodoApp","state","newTodo","sortField","event","preventDefault","_this","setState","prevState","concat","Object","toConsumableArray","target","Math","floor","random","todoId","objectSpread","handleToggleAll","filterBy","setFilteredTodos","console","log","this","filteredTodos","components_Header","components_TodoList","components_Footer","React","Component","App","components_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.33e04681.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, handleToggle, deleteTodo }) => (\n  <li key={todo.id} className=\"\">\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        onChange={() => handleToggle(todo.id)}\n        checked={todo.completed}\n      />\n      <label\n        className={todo.completed ? 'completed' : null}\n        htmlFor=\"todo-1\">{todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(todo.id)} />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  handleToggle: PropTypes.func,\n  deleteTodo: PropTypes.func,\n\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, handleToggle, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        handleToggle={handleToggle}\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  handleToggle: PropTypes.func,\n  deleteTodo: PropTypes.func,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ title, addTodo, getTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <form onSubmit={addTodo}>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onChange={getTodo}\n        value={title}\n      />\n    </form>\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  addTodo: PropTypes.func,\n  getTodo: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst filtersList = [\n  { filterName: 'all', filterText: 'All' },\n  { filterName: 'active', filterText: 'Active' },\n  { filterName: 'completed', filterText: 'Completed' }\n];\n\nconst Footer = ({ todos, handleFilter, clearCompletedTodos }) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.completed).length} items left\n            </span>\n    <ul className=\"filters\">\n      {filtersList.map((filterItem) =>\n        <li key={filterItem.filterName}>\n          <a\n            className=\"selected\"\n            onClick={() => handleFilter(filterItem.filterName)}\n            href=\"#/\"\n          >\n            {filterItem.filterText}\n          </a>\n        </li>)}\n    </ul>\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={todos\n        .some(todo => todo.completed)\n        ? { display: 'block' }\n        : { display: 'none' }}\n      onClick={clearCompletedTodos}\n    >\n      Clear completed\n            </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  handleFilter: PropTypes.func,\n  clearCompletedTodos: PropTypes.func,\n};\n\nexport default Footer;\n\n\n\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Header from './Header';\nimport Footer from './Footer';\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    newTodo: { title: '' },\n    sortField: 'all',\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n    this.setState(prevState => ({\n      todos: [...prevState.todos, prevState.newTodo],\n      newTodo: { title: '' },\n    }));\n  }\n\n  getTodo = (event) => {\n    const title = event.target.value,\n      id = Math.floor(Math.random() * Math.floor(1000)),\n      newTodo = { id, title, completed: false };\n\n    event.preventDefault();\n    this.setState({\n      newTodo,\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  clearCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  handleToggle = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id === todoId\n          ? { ...todo, completed: !todo.completed }\n          : todo\n      )),\n    }));\n  };\n\n  handleToggleAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        { ...todo, completed: true }\n      )),\n    }));\n  };\n\n  handleFilter = (filterBy) => {\n    this.setState({\n      filterBy,\n    });\n  };\n\n  setFilteredTodos = (filterBy) => {\n    const { todos } = this.state;\n\n    switch (filterBy) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  render() {\n    console.log(this.state.todos)\n    const filteredTodos = this.setFilteredTodos(this.state.filterBy);\n\n    return (\n      <section className=\"todoapp\">\n        <Header title={this.state.newTodo.title} addTodo={this.addTodo} getTodo={this.getTodo} />\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" onChange={this.handleToggleAll} />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList todos={filteredTodos} handleToggle={this.handleToggle} deleteTodo={this.deleteTodo} />\n        </section>\n        <Footer todos={this.state.todos} handleFilter={this.handleFilter} clearCompletedTodos={this.clearCompletedTodos} />\n      </section>\n\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <TodoApp />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}